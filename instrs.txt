   * ABCD Dy,Dx
   * ABCD –(Ay),–(Ax)
   * ADD <ea>,Dn
   * ADD Dn,<ea>
   * ADDA <ea>,An
   * ADDI #<data>,<ea>
   * ADDQ #<data>,<ea>
   * ADDX Dy,Dx
   * ADDX –(Ay),–(Ax)
   * AND <ea>,Dn
   * AND Dn,<ea>
   * ANDI #<data>,<ea>
   * ANDI #<data>,CCR
   * ASd Dx,Dy
   * ASd #<data>,Dy
   * ASd <ea>
   * Bcc <label>
   * BCHG Dn,<ea>
   * BCHG #<data>,<ea>
   * BCLR Dn,<ea>
   * BCLR #<data>,<ea>
   * BRA <label>
   * BSET Dn,<ea>
   * BSET #<data>,<ea>
   * BSR <label>
   * BTST Dn,<ea>
   * BTST #<data>,<ea>
   * CHK <ea>,Dn
   * CLR <ea>
   * CMP <ea>,Dn
   * CMPA <ea>,An
   * CMPI #<data>,<ea>
   * CMPM (Ay)+,(Ax)+
   * DBcc Dn,<label>
   * DIVS.W <ea>,Dn
   * DIVU.W <ea>,Dn
   * EOR Dn,<ea>
   * EORI #<data>,<ea>
   * EORI #<data>,CCR
   * EXG Dx,Dy
   * EXG Ax,Ay
   * EXG Dx,Ay
   * EXT.W Dn
   * EXT.L Dn
   * ILLEGAL
   * JMP <ea>
   * JSR <ea>
   * LEA <ea>,An
   * LINK An,#<displacement>
   * LSd Dx,Dy
   * LSd #<data>,Dy
   * LSd <ea>
   * MOVE <ea>,<ea>
   * MOVEA <ea>,An
   * MOVE <ea>,CCR
   * MOVE SR,<ea>
   * MOVEM <list>,<ea>
   * MOVEM <ea>,<list>
   * MOVEP Dx,(d16,Ay)
   * MOVEP (d16,Ay),Dx
   * MOVEQ #<data>,Dn
   * MULS.W <ea>,Dn
   * MULU.W <ea>,Dn
   * NBCD <ea>
   * NEG <ea>
   * NEGX <ea>
   * NOP
   * NOT <ea>
   * OR <ea>,Dn
   * OR Dn,<ea>
   * ORI #<data>,<ea>
   * ORI #<data>,CCR
   * PEA <ea>
   * ROd Dx,Dy
   * ROd #<data>,Dy
   * ROd <ea>
   * ROXd Dx,Dy
   * ROXd #<data>,Dy
   * ROXd <ea>
   * RTE
   * RTR
   * RTS
   * SBCD Dx,Dy
   * SBCD –(Ax),–(Ay)
   * Scc <ea>
   * STOP #<data>
   * SUB <ea>,Dn
   * SUB Dn,<ea>
   * SUBA <ea>,An
   * SUBI #<data>,<ea>
   * SUBQ #<data>,<ea>
   * SUBX Dy,Dx
   * SUBX –(Ay),–(Ax)
   * SWAP Dn
   * TAS <ea>
   * TRAP #<vector>
   * TRAPV
   * TST <ea>
   * UNLK An
   